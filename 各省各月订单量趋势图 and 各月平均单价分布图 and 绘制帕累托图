# 生成画布，并设置画布的大小为(6, 6)
plt.figure(figsize=(6, 6))
# 设置 x 坐标值为月份信息，y 坐标值为各个省份在各月口罩订单总量的信息
x = month_order_df.index
y = month_order_df.values           

# 绘制折线图，并调整线条、标记点的样式
plt.plot(x,y,linewidth=2,marker='o',markerfacecolor='w',markersize=8)
# 设置图表标题名为'各省各月口罩订单量变化折线图'，字体大小为 20
plt.title('各省各月口罩订单量变化折线图',fontsize=20)
# 设置坐标轴的刻度字体大小为 12
plt.xticks(fontsize=12)
plt.yticks(fontsize=12)
# 设置 x、y 轴标题分别为'月份'、'各省各月口罩订单量（百万）'，字体大小均为 15
plt.xlabel('月份',fontsize=15)
plt.ylabel('各省各月口罩订单量（百万）',fontsize=15)
# 添加图例，内容为：'其他', '广东', '江苏', '河南', '湖北', '湖南'
plt.legend(['其他', '广东', '江苏', '河南', '湖北', '湖南'])
# 设置画布保存路径为'./工作/各省各月口罩订单量变化折线图.png'
plt.savefig('./工作/各省各月口罩订单量变化折线图.png')



# 生成画布，并设置画布的大小为(6, 6)
plt.figure(figsize=(6,6))
# 设置 x 坐标值为月份信息，y 坐标值为各月口罩平均单价
x = mask_price.index
y = mask_price.values
# 绘制柱状图，调整柱子的样式，并区分 1 月份和 6 月份颜色
plt.bar(x,height=y,color=['r','g','g','g','g','b'],alpha=0.9,width=0.5)
# 设置图表标题名为'各月平均单价分布图'，字体大小为 20
plt.title('各月平均单价分布图',fontsize=20)
# 坐标轴的刻度字体大小为 12
plt.xticks(fontsize=12)
plt.yticks(fontsize=12)
# 设置 x、y 轴标题分别为'月份'、'各月平均单价（元）'，字体大小均为 15
plt.xlabel('月份',fontsize=15)
plt.ylabel('各月平均单价（元）',fontsize=15)
# 为柱子添加每一个数据标签，数值是 y 坐标值，并且只保留整数
for a,b in zip(x,y):
    plt.text(a,b,'%.0f' % b,ha='center',va='bottom',fontsize=10)

# 设置画布保存路径为'./工作/各月平均单价分布图.png'
plt.savefig('./工作/各月平均单价分布图.png')


# 生成画布，并设置画布的大小
plt.figure(figsize=(6, 6))
# 设置 x/y 坐标值
x = sales_sum.index
y = sales_sum.values
# 绘制柱状图，并调整柱子的样式
plt.bar(x, height=y, width=0.6, alpha=0.6)
# 设置图表标题名及字体大小
plt.title('各明细商品总销售额分布图', fontsize=20)
# 设置坐标轴的刻度字体大小，逆时针旋转x轴刻度90度
plt.xticks(fontsize=12, rotation=90)
plt.yticks(fontsize=12)
# 设置坐标轴的标题名及字体大小
plt.xlabel('商品明细', fontsize=15)
plt.ylabel('总销售额', fontsize=15)

# 求出累计销售额占比
p = 1.0*sales_sum.cumsum()/sales_sum.sum()

# 找到累计占比超过80%时候的index
key = p[p>0.8].index[0]  
key_num = sales_sum.index.tolist().index(key) 
print('超过80%累计占比的节点值索引为：' ,key)
print('------')

# 绘制折线图并将y轴设置为副坐标轴
p.plot(style = '--ko', secondary_y=True, rot=90)
plt.axvline(key_num,color='r',linestyle="--",alpha=0.8)
# 累计占比超过80%的节点
plt.text(key_num+0.2,p[key],'累计占比为：%.3f%%' % (p[key]*100), color = 'r')  

plt.ylabel('累计销售额占比')
